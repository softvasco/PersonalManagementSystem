@page "/add-edit-earning"
@page "/add-edit-earning/{earningId}"

@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

@rendermode @(new InteractiveServerRenderMode(prerender:false))

@if (earningDto.Id > 0)
{
    <br />
    <br />
    <h2>Edit earning</h2>
    <br />

    <EditForm Model="@earningDto" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <label>Identifier:</label>
        @* <InputText @bind-Value="@earning.Id" /> *@

        <!-- Add more input components for other properties -->

        <button type="submit">Save</button>
    </EditForm>

}
else
{
    <br />
    <br />
    <h2>Add earning</h2>
    <br />
}


@code {

    [Parameter]
    public string EarningId { get; set; }

    private EarningDto earningDto { get; set; } = new();
    private CreateEarningDto createEarningDto { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(EarningId))
        {
            int earningId = Convert.ToInt32(EarningId);

            earningDto = await Http.GetFromJsonAsync<EarningDto>("Earnings/GetById/" + earningId);
        }
        else
        {

        }

    }

    private void HandleValidSubmit()
    {
        // Update the earning data in the database
        // Redirect or perform any necessary actions after editing
    }
}